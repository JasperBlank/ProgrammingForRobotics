[0.000000] (-) TimerEvent: {}
[0.000367] (-) JobUnselected: {'identifier': 'ball_detection'}
[0.000485] (-) JobUnselected: {'identifier': 'image_functions_sdfr'}
[0.000571] (-) JobUnselected: {'identifier': 'robot_image_messages'}
[0.000607] (-) JobUnselected: {'identifier': 'ros2_introduction'}
[0.000651] (motion_controller) JobQueued: {'identifier': 'motion_controller', 'dependencies': OrderedDict([('image_functions_sdfr', '/home/lucasjko/sdfr_ws/install/image_functions_sdfr'), ('robot_image_messages', '/home/lucasjko/sdfr_ws/install/robot_image_messages')])}
[0.000678] (motion_controller) JobStarted: {'identifier': 'motion_controller'}
[0.015639] (motion_controller) JobProgress: {'identifier': 'motion_controller', 'progress': 'cmake'}
[0.016619] (motion_controller) JobProgress: {'identifier': 'motion_controller', 'progress': 'build'}
[0.017423] (motion_controller) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/lucasjko/sdfr_ws/build/motion_controller', '--', '-j8', '-l8'], 'cwd': '/home/lucasjko/sdfr_ws/build/motion_controller', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'lucasjko'), ('LC_TIME', 'nl_NL.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/lucasjko/sdfr_ws/install/robot_image_messages/lib:/home/lucasjko/sdfr_ws/install/image_functions_sdfr/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/lucasjko'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'nl_NL.UTF-8'), ('SYSTEMD_EXEC_PID', '4733'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('COLCON_PREFIX_PATH', '/home/lucasjko/sdfr_ws/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'lucasjko'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'lucasjko'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '1'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/home/lucasjko/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/lucasjko-G5-5590:@/tmp/.ICE-unix/2022,unix/lucasjko-G5-5590:/tmp/.ICE-unix/2022'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'nl_NL.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/a977fcb4_31e8_4aa7_bdf1_bbc85f1776c2'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'nl_NL.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.96'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '100'), ('AMENT_PREFIX_PATH', '/home/lucasjko/sdfr_ws/install/ros2_introduction:/home/lucasjko/sdfr_ws/install/motion_controller:/home/lucasjko/sdfr_ws/install/ball_detection:/home/lucasjko/sdfr_ws/install/robot_image_messages:/home/lucasjko/sdfr_ws/install/image_functions_sdfr:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LC_NAME', 'nl_NL.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'nl_NL.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'nl_NL.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/lucasjko/sdfr_ws/build/motion_controller'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/lucasjko/sdfr_ws/install/robot_image_messages/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'nl_NL.UTF-8'), ('LC_PAPER', 'nl_NL.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/lucasjko/sdfr_ws/install/robot_image_messages:/home/lucasjko/sdfr_ws/install/image_functions_sdfr:/home/lucasjko/sdfr_ws/install/ros2_introduction:/home/lucasjko/sdfr_ws/install/motion_controller:/home/lucasjko/sdfr_ws/install/ball_detection:/opt/ros/humble')]), 'shell': False}
[0.064596] (motion_controller) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target bounding_box_controller\x1b[0m\n'}
[0.076393] (motion_controller) StdoutLine: {'line': b'[ 50%] Built target differential_drive_controller\n'}
[0.083291] (motion_controller) StdoutLine: {'line': b'[ 75%] \x1b[32mBuilding CXX object CMakeFiles/bounding_box_controller.dir/src/bounding_box_controller.cpp.o\x1b[0m\n'}
[0.099174] (-) TimerEvent: {}
[0.199431] (-) TimerEvent: {}
[0.299714] (-) TimerEvent: {}
[0.399979] (-) TimerEvent: {}
[0.500252] (-) TimerEvent: {}
[0.600546] (-) TimerEvent: {}
[0.700777] (-) TimerEvent: {}
[0.801049] (-) TimerEvent: {}
[0.901281] (-) TimerEvent: {}
[1.001547] (-) TimerEvent: {}
[1.101825] (-) TimerEvent: {}
[1.202024] (-) TimerEvent: {}
[1.302266] (-) TimerEvent: {}
[1.402530] (-) TimerEvent: {}
[1.502792] (-) TimerEvent: {}
[1.603078] (-) TimerEvent: {}
[1.703439] (-) TimerEvent: {}
[1.803709] (-) TimerEvent: {}
[1.903962] (-) TimerEvent: {}
[2.004265] (-) TimerEvent: {}
[2.104567] (-) TimerEvent: {}
[2.204859] (-) TimerEvent: {}
[2.254673] (motion_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/include/motion_controller/bounding_box_controller.hpp:4\x1b[m\x1b[K,\n'}
[2.254926] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:1\x1b[m\x1b[K:\n'}
[2.255053] (motion_controller) StderrLine: {'line': b'/usr/include/c++/11/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<void (BoundingBoxController::*)(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >), BoundingBoxController*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.255161] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:768:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, void (BoundingBoxController::*)(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >), BoundingBoxController*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.255270] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:789:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (BoundingBoxController::*)(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >); _BoundArgs = {BoundingBoxController*, const std::_Placeholder<1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.255376] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:5:124:\x1b[m\x1b[K   required from here\n'}
[2.255468] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[2.255565] (motion_controller) StderrLine: {'line': b'  755 |       static_assert(_Varargs::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K\n'}
[2.255670] (motion_controller) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K~~~~~\x1b[m\x1b[K\n'}
[2.255770] (motion_controller) StderrLine: {'line': b'  756 | \x1b[01;31m\x1b[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1\x1b[m\x1b[K\n'}
[2.255880] (motion_controller) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.255985] (motion_controller) StderrLine: {'line': b'  757 | \x1b[01;31m\x1b[K                    : sizeof...(_BoundArgs) == _Arity::value + 1\x1b[m\x1b[K,\n'}
[2.256088] (motion_controller) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.256186] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K(false ? (2 >= (((long unsigned int)std::integral_constant<long unsigned int, 2>::value) + 1)) : (2 == (((long unsigned int)std::integral_constant<long unsigned int, 2>::value) + 1)))\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[2.269458] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid BoundingBoxController::boundingBoxCallback(robot_image_messages::msg::BallOutput_<std::allocator<void> >::ConstSharedPtr, sensor_msgs::msg::Image_<std::allocator<void> >::ConstSharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.269668] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:15:159:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kimg\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter\x07-Wunused-parameter\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[2.269781] (motion_controller) StderrLine: {'line': b'   15 | void BoundingBoxController::boundingBoxCallback(robot_image_messages::msg::BallOutput::ConstSharedPtr boundingBoxMsg, \x1b[01;35m\x1b[Ksensor_msgs::msg::Image::ConstSharedPtr img\x1b[m\x1b[K) {\n'}
[2.269901] (motion_controller) StderrLine: {'line': b'      |                                                                                                                       \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.304966] (-) TimerEvent: {}
[2.405286] (-) TimerEvent: {}
[2.505582] (-) TimerEvent: {}
[2.605879] (-) TimerEvent: {}
[2.670329] (motion_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.670871] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.671161] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.671286] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.671396] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.671505] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.671620] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.671748] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.671858] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.671963] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.672063] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/include/motion_controller/bounding_box_controller.hpp:6\x1b[m\x1b[K,\n'}
[2.672166] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:1\x1b[m\x1b[K:\n'}
[2.672269] (motion_controller) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.672392] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = robot_image_messages::msg::BallOutput_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.672528] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = robot_image_messages::msg::BallOutput_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.672669] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.672800] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.672930] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:5:94:\x1b[m\x1b[K   required from here\n'}
[2.673039] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>::function(std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.673160] (motion_controller) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[2.673269] (motion_controller) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.673375] (motion_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[2.673480] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/include/motion_controller/bounding_box_controller.hpp:4\x1b[m\x1b[K,\n'}
[2.673582] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:1\x1b[m\x1b[K:\n'}
[2.673687] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.673813] (motion_controller) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[2.673918] (motion_controller) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.674036] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.674142] (motion_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[2.674246] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_function.h:60\x1b[m\x1b[K,\n'}
[2.674353] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/functional:49\x1b[m\x1b[K,\n'}
[2.674458] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/include/motion_controller/bounding_box_controller.hpp:4\x1b[m\x1b[K,\n'}
[2.674562] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:1\x1b[m\x1b[K:\n'}
[2.674666] (motion_controller) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.674772] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>::_Callable<std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>&, std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>, std::__invoke_result<std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>&, std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > > > >; _Tp = void; _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.674913] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.675035] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = robot_image_messages::msg::BallOutput_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.675176] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = robot_image_messages::msg::BallOutput_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.675309] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.675435] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.675577] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:5:94:\x1b[m\x1b[K   required from here\n'}
[2.675682] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.675866] (motion_controller) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[2.675975] (motion_controller) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.676082] (motion_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[2.676187] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/include/motion_controller/bounding_box_controller.hpp:4\x1b[m\x1b[K,\n'}
[2.676297] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:1\x1b[m\x1b[K:\n'}
[2.676402] (motion_controller) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.676514] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = robot_image_messages::msg::BallOutput_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.676649] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = robot_image_messages::msg::BallOutput_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.676798] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.676918] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = robot_image_messages::msg::BallOutput_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<robot_image_messages::msg::BallOutput_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<robot_image_messages::msg::BallOutput_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.677044] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:5:94:\x1b[m\x1b[K   required from here\n'}
[2.677161] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.677274] (motion_controller) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[2.677389] (motion_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.677494] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.677617] (motion_controller) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[2.677733] (motion_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.677843] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.677971] (motion_controller) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[2.678083] (motion_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.678188] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.678303] (motion_controller) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[2.678407] (motion_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.678513] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.678628] (motion_controller) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[2.678731] (motion_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.678832] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.678950] (motion_controller) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[2.679054] (motion_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.679160] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.679268] (motion_controller) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[2.679380] (motion_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.679489] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[2.694002] (motion_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.694393] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.694514] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.694618] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.694723] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.694828] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[2.694933] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[2.695040] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.695148] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.695253] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[2.695358] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/include/motion_controller/bounding_box_controller.hpp:6\x1b[m\x1b[K,\n'}
[2.695477] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:1\x1b[m\x1b[K:\n'}
[2.695585] (motion_controller) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.695709] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::Image_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.695843] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::Image_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.695971] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.696108] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::Image_<std::allocator<void> >; CallbackT = std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::Image_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::Image_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.696237] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:6:81:\x1b[m\x1b[K   required from here\n'}
[2.696343] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>::function(std::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.696455] (motion_controller) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[2.696560] (motion_controller) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.696663] (motion_controller) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/functional:59\x1b[m\x1b[K,\n'}
[2.696775] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/include/motion_controller/bounding_box_controller.hpp:4\x1b[m\x1b[K,\n'}
[2.696884] (motion_controller) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/lucasjko/sdfr_ws/src/motion_controller/src/bounding_box_controller.cpp:1\x1b[m\x1b[K:\n'}
[2.696988] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.697099] (motion_controller) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[2.697207] (motion_controller) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.697314] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.697419] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.697543] (motion_controller) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[2.697646] (motion_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.697747] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.697878] (motion_controller) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[2.697996] (motion_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.698105] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.698216] (motion_controller) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[2.698324] (motion_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.698432] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.698546] (motion_controller) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[2.698652] (motion_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[2.698758] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.698871] (motion_controller) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[2.698988] (motion_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.699103] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (BoundingBoxController::*(BoundingBoxController*, std::_Placeholder<1>))(std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.699217] (motion_controller) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[2.699323] (motion_controller) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.699425] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::shared_ptr<const robot_image_messages::msg::BallOutput_<std::allocator<void> > >, std::shared_ptr<const sensor_msgs::msg::Image_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.699536] (motion_controller) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[2.699641] (motion_controller) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.699745] (motion_controller) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[2.705989] (-) TimerEvent: {}
[2.806275] (-) TimerEvent: {}
[2.906573] (-) TimerEvent: {}
[3.006871] (-) TimerEvent: {}
[3.107183] (-) TimerEvent: {}
[3.207497] (-) TimerEvent: {}
[3.307774] (-) TimerEvent: {}
[3.408044] (-) TimerEvent: {}
[3.508322] (-) TimerEvent: {}
[3.608604] (-) TimerEvent: {}
[3.708888] (-) TimerEvent: {}
[3.809170] (-) TimerEvent: {}
[3.909441] (-) TimerEvent: {}
[4.009680] (-) TimerEvent: {}
[4.109984] (-) TimerEvent: {}
[4.210248] (-) TimerEvent: {}
[4.310517] (-) TimerEvent: {}
[4.410795] (-) TimerEvent: {}
[4.511064] (-) TimerEvent: {}
[4.611300] (-) TimerEvent: {}
[4.711578] (-) TimerEvent: {}
[4.811845] (-) TimerEvent: {}
[4.912113] (-) TimerEvent: {}
[5.012390] (-) TimerEvent: {}
[5.112671] (-) TimerEvent: {}
[5.146924] (motion_controller) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/bounding_box_controller.dir/build.make:76: CMakeFiles/bounding_box_controller.dir/src/bounding_box_controller.cpp.o] Error 1\n'}
[5.147264] (motion_controller) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/bounding_box_controller.dir/all] Error 2\n'}
[5.147492] (motion_controller) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[5.149565] (motion_controller) CommandEnded: {'returncode': 2}
[5.186451] (motion_controller) JobEnded: {'identifier': 'motion_controller', 'rc': 2}
[5.201657] (-) EventReactorShutdown: {}
